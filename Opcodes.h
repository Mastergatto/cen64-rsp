/* ============================================================================
 *  Opcodes.h: Opcode types, info, and other data.
 *
 *  RSPSIM: Reality Signal Processor SIMulator.
 *  Copyright (C) 2013, Tyler J. Stachecki.
 *  All rights reserved.
 *
 *  This file is subject to the terms and conditions defined in
 *  file 'LICENSE', which is part of this source code package.
 * ========================================================================= */
#ifndef __RSP__OPCODES_H__
#define __RSP__OPCODES_H__
#include "Common.h"

#ifdef USE_SSE
#ifdef SSSE3_ONLY
#include <tmmintrin.h>
#else
#include <smmintrin.h>
#endif
#endif

enum RSPOpcodeID {
#define X(op) RSP_OPCODE_##op,
#include "ScalarOpcodes.md"
  NUM_RSP_SCALAR_OPCODES
#undef X
};

enum RSPVOpcodeID {
#define X(op) RSP_OPCODE_##op,
#include "VectorOpcodes.md"
  NUM_RSP_VECTOR_OPCODES
#undef X
};

struct RSP;
struct RSPCP2;

#define X(op) void RSP##op( \
  struct RSP *, uint32_t, uint32_t);
#include "ScalarOpcodes.md"
#undef X

#define X(op) void RSP##op( \
  struct RSPCP2 *, int16_t *, __m128i, __m128i, __m128i);
#include "VectorOpcodes.md"
#undef X

typedef void (*const RSPScalarFunction)
  (struct RSP *, uint32_t, uint32_t);

typedef void (*const RSPVectorFunction)
  (struct RSPCP2 *, int16_t *, __m128i, __m128i, __m128i);

extern const RSPScalarFunction RSPScalarFunctionTable[NUM_RSP_SCALAR_OPCODES];
extern const RSPVectorFunction RSPVectorFunctionTable[NUM_RSP_VECTOR_OPCODES];

#ifndef NDEBUG
extern const char *RSPScalarOpcodeMnemonics[NUM_RSP_SCALAR_OPCODES];
extern const char *RSPVectorOpcodeMnemonics[NUM_RSP_VECTOR_OPCODES];
#endif

/* ============================================================================
 *  Build every entry in the opcode database.
 *  TODO: Not (yet) complete... nor correct?
 * ========================================================================= */
#define RSP_BUILD_OP(op, flags) \
  (RSP_OPCODE_##op), (flags)

#define INFO1(x) (OPCODE_INFO_##x)
#define INFO2(x,y) (INFO1(x) | OPCODE_INFO_##y)
#define INFO3(x,y,z) (INFO2(x,y) | OPCODE_INFO_##z)
#define INFO4(x,y,z,a) (INFO3(x,y,z) | OPCODE_INFO_##a)
#define INFO5(x,y,z,a,b) (INFO4(x,y,z,a) | OPCODE_INFO_##b)

/* Not actual instructions; just for reference. */
#define INVALID RSP_BUILD_OP(INV, INFO1(SCALAR))
#define VINVALID RSP_BUILD_OP(VINV, INFO1(VCOMP))
#define VECT RSP_BUILD_OP(INV, INFO1(VCOMP))

/* List of unimplemented opcodes. */
#define CFC2 RSP_BUILD_OP(CFC2, INFO1(SCALAR))
#define CTC2 RSP_BUILD_OP(CTC2, INFO1(SCALAR))
#define MFC0 RSP_BUILD_OP(MFC0, INFO1(SCALAR))
#define MFC2 RSP_BUILD_OP(MFC2, INFO1(SCALAR))
#define MTC0 RSP_BUILD_OP(MTC0, INFO1(SCALAR))
#define MTC2 RSP_BUILD_OP(MTC2, INFO1(SCALAR))

/* List of implemented opcodes; should be correct... */
#define ADD RSP_BUILD_OP(ADD, INFO4(SCALAR, NEED_RS, NEED_RT, WRITE_RD))
#define ADDI RSP_BUILD_OP(ADDI, INFO3(SCALAR, NEED_RS, WRITE_RT))
#define AND RSP_BUILD_OP(AND, INFO4(SCALAR, NEED_RS, NEED_RT, WRITE_RD))
#define ANDI RSP_BUILD_OP(ANDI, INFO3(SCALAR, NEED_RS, WRITE_RT))
#define BEQ RSP_BUILD_OP(BEQ, INFO4(SCALAR, BRANCH, NEED_RS, NEED_RT))
#define BGEZ RSP_BUILD_OP(BGEZ, INFO3(SCALAR, BRANCH, NEED_RS))
#define BGEZAL RSP_BUILD_OP(BGEZAL, INFO4(SCALAR, BRANCH, NEED_RS, WRITE_LR))
#define BGTZ RSP_BUILD_OP(BGTZ, INFO3(SCALAR, BRANCH, NEED_RS))
#define BLEZ RSP_BUILD_OP(BLEZ, INFO3(SCALAR, BRANCH, NEED_RS))
#define BLTZ RSP_BUILD_OP(BLTZ, INFO3(SCALAR, BRANCH, NEED_RS))
#define BLTZAL RSP_BUILD_OP(BLTZAL, INFO4(SCALAR, BRANCH, NEED_RS, WRITE_LR))
#define BNE RSP_BUILD_OP(BNE, INFO4(SCALAR, BRANCH, NEED_RS, NEED_RT))
#define BREAK RSP_BUILD_OP(BREAK, INFO2(SCALAR, BREAK))
#define J RSP_BUILD_OP(J, INFO2(SCALAR, BRANCH))
#define JAL RSP_BUILD_OP(JAL, INFO3(SCALAR, BRANCH, WRITE_LR))
#define JALR RSP_BUILD_OP(JALR, INFO4(SCALAR, BRANCH, NEED_RS, WRITE_RD))
#define JR RSP_BUILD_OP(JR, INFO3(SCALAR, BRANCH, NEED_RS))
#define LB RSP_BUILD_OP(LB, INFO4(SCALAR, LOAD, NEED_RS, WRITE_RT))
#define LBU RSP_BUILD_OP(LBU, INFO4(SCALAR, LOAD, NEED_RS, WRITE_RT))
#define LBV RSP_BUILD_OP(LBV, INFO4(SCALAR, LWC2, NEED_RS, WRITE_RT))
#define LDV RSP_BUILD_OP(LDV, INFO4(SCALAR, LWC2, NEED_RS, WRITE_RT))
#define LFV RSP_BUILD_OP(LFV, INFO4(SCALAR, LWC2, NEED_RS, WRITE_RT))
#define LH RSP_BUILD_OP(LH, INFO4(SCALAR, LOAD, NEED_RS, WRITE_RT))
#define LHU RSP_BUILD_OP(LHU, INFO4(SCALAR, LOAD, NEED_RS, WRITE_RT))
#define LHV RSP_BUILD_OP(LHV, INFO4(SCALAR, LWC2, NEED_RS, WRITE_RT))
#define LLV RSP_BUILD_OP(LLV, INFO4(SCALAR, LWC2, NEED_RS, WRITE_RT))
#define LPV RSP_BUILD_OP(LPV, INFO4(SCALAR, LWC2, NEED_RS, WRITE_RT))
#define LQV RSP_BUILD_OP(LQV, INFO4(SCALAR, LWC2, NEED_RS, WRITE_RT))
#define LRV RSP_BUILD_OP(LRV, INFO4(SCALAR, LWC2, NEED_RS, WRITE_RT))
#define LSV RSP_BUILD_OP(LSV, INFO4(SCALAR, LWC2, NEED_RS, WRITE_RT))
#define LTV RSP_BUILD_OP(LTV, INFO5(SCALAR, LWC2, XPOSE, NEED_RS, WRITE_RT))
#define LUI RSP_BUILD_OP(LUI, INFO2(SCALAR, WRITE_RT))
#define LUV RSP_BUILD_OP(LUV, INFO4(SCALAR, LWC2, NEED_RS, WRITE_RT))
#define LW RSP_BUILD_OP(LW, INFO4(SCALAR, LOAD, NEED_RS, WRITE_RT))
#define NOP RSP_BUILD_OP(NOP, INFO1(SCALAR))
#define NOR RSP_BUILD_OP(NOR, INFO4(SCALAR, NEED_RS, NEED_RT, WRITE_RD))
#define OR RSP_BUILD_OP(OR, INFO4(SCALAR, NEED_RS, NEED_RT, WRITE_RD))
#define ORI RSP_BUILD_OP(ORI, INFO3(SCALAR, NEED_RS, WRITE_RT))
#define SB RSP_BUILD_OP(SB, INFO4(SCALAR, STORE, NEED_RS, NEED_RT))
#define SBV RSP_BUILD_OP(SBV, INFO4(SCALAR, SWC2, NEED_RS, NEED_RT))
#define SDV RSP_BUILD_OP(SDV, INFO4(SCALAR, SWC2, NEED_RS, NEED_RT))
#define SFV RSP_BUILD_OP(SFV, INFO4(SCALAR, SWC2, NEED_RS, NEED_RT))
#define SH RSP_BUILD_OP(SH, INFO4(SCALAR, STORE, NEED_RS, NEED_RT))
#define SHV RSP_BUILD_OP(SHV, INFO4(SCALAR, SWC2, NEED_RS, NEED_RT))
#define SLL RSP_BUILD_OP(SLL, INFO3(SCALAR, NEED_RT, WRITE_RD))
#define SLLV RSP_BUILD_OP(SLLV, INFO4(SCALAR, NEED_RS, NEED_RT, WRITE_RD))
#define SLT RSP_BUILD_OP(SLT, INFO4(SCALAR, NEED_RS, NEED_RT, WRITE_RD))
#define SLTI RSP_BUILD_OP(SLTI, INFO3(SCALAR, NEED_RS, WRITE_RT))
#define SLTIU RSP_BUILD_OP(SLTIU, INFO3(SCALAR, NEED_RS, WRITE_RT))
#define SLTU RSP_BUILD_OP(SLTU, INFO4(SCALAR, NEED_RS, NEED_RT, WRITE_RD))
#define SLV RSP_BUILD_OP(SLV, INFO4(SCALAR, SWC2, NEED_RS, NEED_RT))
#define SPV RSP_BUILD_OP(SPV, INFO4(SCALAR, SWC2, NEED_RS, NEED_RT))
#define SQV RSP_BUILD_OP(SQV, INFO4(SCALAR, SWC2, NEED_RS, NEED_RT))
#define SRA RSP_BUILD_OP(SRA, INFO3(SCALAR, NEED_RT, WRITE_RD))
#define SRAV RSP_BUILD_OP(SRAV, INFO4(SCALAR, NEED_RS, NEED_RT, WRITE_RD))
#define SRL RSP_BUILD_OP(SRL, INFO3(SCALAR, NEED_RT, WRITE_RD))
#define SRLV RSP_BUILD_OP(SRLV, INFO4(SCALAR, NEED_RS, NEED_RT, WRITE_RD))
#define SRV RSP_BUILD_OP(SRV, INFO4(SCALAR, SWC2, NEED_RS, NEED_RT))
#define SSV RSP_BUILD_OP(SSV, INFO4(SCALAR, SWC2, NEED_RS, NEED_RT))
#define STV RSP_BUILD_OP(STV, INFO5(SCALAR, SWC2, XPOSE, NEED_RS, NEED_RT))
#define SUB RSP_BUILD_OP(SUB, INFO4(SCALAR, NEED_RS, NEED_RT, WRITE_RD))
#define SUBU RSP_BUILD_OP(SUBU, INFO4(SCALAR, NEED_RS, NEED_RT, WRITE_RD))
#define SUV RSP_BUILD_OP(SUV, INFO4(SCALAR, SWC2, NEED_RS, NEED_RT))
#define SW RSP_BUILD_OP(SW, INFO4(SCALAR, STORE, NEED_RS, NEED_RT))
#define SWV RSP_BUILD_OP(SWV, INFO4(SCALAR, SWC2, NEED_RS, NEED_RT))
#define VABS RSP_BUILD_OP(VABS, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VADD RSP_BUILD_OP(VADD, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VADDC RSP_BUILD_OP(VADDC, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VAND RSP_BUILD_OP(VAND, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VCH RSP_BUILD_OP(VCH, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VCL RSP_BUILD_OP(VCL, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VCR RSP_BUILD_OP(VCR, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VEQ RSP_BUILD_OP(VEQ, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VGE RSP_BUILD_OP(VGE, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VLT RSP_BUILD_OP(VLT, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VMACF RSP_BUILD_OP(VMACF, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VMADH RSP_BUILD_OP(VMADH, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VMADL RSP_BUILD_OP(VMADL, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VMADM RSP_BUILD_OP(VMADM, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VMADN RSP_BUILD_OP(VMADN, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VMOV RSP_BUILD_OP(VMOV, INFO3(VCOMP, NEED_RT, WRITE_RD))
#define VMACQ RSP_BUILD_OP(VMACQ, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VMACU RSP_BUILD_OP(VMACU, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VMRG RSP_BUILD_OP(VMRG, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VMUDH RSP_BUILD_OP(VMUDH, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VMUDL RSP_BUILD_OP(VMUDL, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VMUDM RSP_BUILD_OP(VMUDM, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VMUDN RSP_BUILD_OP(VMUDN, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VMULF RSP_BUILD_OP(VMULF, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VMULQ RSP_BUILD_OP(VMULQ, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VMULU RSP_BUILD_OP(VMULU, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VNE RSP_BUILD_OP(VNE, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VNAND RSP_BUILD_OP(VNAND, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VNOP RSP_BUILD_OP(VNOP, INFO1(VCOMP))
#define VNOR RSP_BUILD_OP(VNOR, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VNXOR RSP_BUILD_OP(VNXOR, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VOR RSP_BUILD_OP(VOR, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VRCP RSP_BUILD_OP(VRCP, INFO3(VCOMP, NEED_RT, WRITE_RD))
#define VRCPH RSP_BUILD_OP(VRCPH, INFO3(VCOMP, NEED_RT, WRITE_RD))
#define VRCPL RSP_BUILD_OP(VRCPL, INFO3(VCOMP, NEED_RT, WRITE_RD))
#define VRNDN RSP_BUILD_OP(VRNDN, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VRNDP RSP_BUILD_OP(VRNDP, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VRSQ RSP_BUILD_OP(VRSQ, INFO3(VCOMP, NEED_RT, WRITE_RD))
#define VRSQH RSP_BUILD_OP(VRSQH, INFO3(VCOMP, NEED_RT, WRITE_RD))
#define VRSQL RSP_BUILD_OP(VRSQL, INFO3(VCOMP, NEED_RT, WRITE_RD))
#define VSAR RSP_BUILD_OP(VSAR, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD)) 
#define VSUB RSP_BUILD_OP(VSUB, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define VSUBC RSP_BUILD_OP(VSUBC, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD)) 
#define VXOR RSP_BUILD_OP(VXOR, INFO4(VCOMP, NEED_RS, NEED_RT, WRITE_RD))
#define XOR RSP_BUILD_OP(XOR, INFO4(SCALAR, NEED_RS, NEED_RT, WRITE_RD))
#define XORI RSP_BUILD_OP(XORI, INFO3(SCALAR, NEED_RS, WRITE_RT)) 

#endif

